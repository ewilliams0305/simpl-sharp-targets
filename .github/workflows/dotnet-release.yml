name: ðŸš€ PUBLISH RELEASE

on:
  workflow_dispatch:

  pull_request:
    types: [closed]
    branches: [main]
          
jobs:
  build:
    if: github.event.pull_request.merged == true 

    runs-on: ubuntu-latest    
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.2.0
      with:
        versionSpec: 5.x

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v1.2.0
      id: gitversion 

    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Dotnet Restore  
      run: dotnet restore source/**.sln

    - name: Build and Pack NuGet package  
      run: dotnet build source/**.sln -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release

    - name: Build and Pack NuGet package
      run: dotnet pack source/**.sln -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release -o bin/Release

    - name: Upload NuGet package to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: nugetPackage
        path: bin/Release/ 
        
  release:
    runs-on: ubuntu-latest    
    needs: build
    if: github.ref == 'refs/heads/main'  
    
    steps:  
    - name: Download nuget package artifact
      uses: actions/download-artifact@v4
      with:
        name: nugetPackage

    # - name: Prep packages
    #   run: dotnet nuget add source --username ${{ secrets.NUGET_USERNAME }} --password ${{ secrets.NUGET_API_KEY }} --store-password-in-clear-text --name private_nuget --source https://api.nuget.org/v3/index.json
    
    - name: Push package to GitHub packages 
      if: needs.build.outputs.CommitsSinceVersionSource > 0 
      run: dotnet nuget push nugetPackage/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    
    - name: Create Release
      if: needs.build.outputs.CommitsSinceVersionSource > 0 
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.NUGET_API_KEY }} 
      with:
        tag_name: ${{ needs.build.outputs.Version }}
        release_name: Release ${{ needs.build.outputs.Version }}

    - name: Create Release
      if: needs.build.outputs.CommitsSinceVersionSource > 0 #Only release if there has been a commit/version change
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ needs.build.outputs.Version }}
        name: Release ${{ needs.build.outputs.Version }}
        artifacts: "nugetPackage/*"
        token: ${{ secrets.NUGET_API_KEY }}
